<?php
// $Id$

/**
 * @file
 * Provides the ShareThis service.
 */

/**
 * Implementation of hook_help().
 */
function sharethis_help($path, $arg) {
  switch ($path) {
    case 'admin/help#sharethis':
      $output = '<p>'. t('Provides functionality to interface with the <a href="@sharethis">ShareThis</a> web service.', array('@sharethis' => 'http://sharethis.com')) .'</p>';
      $output .= '<p>'. theme('sharethis', t('Drupal ShareThis Module'), 'http://drupal.org/project/sharethis') .'</p>';
      return $output;
    case 'admin/settings/sharethis':
      return '<p>'. t('Below provides the settings for interfacing with the <a href="@sharethis">ShareThis</a> web service.', array('@sharethis' => 'http://sharethis.com')) .'</p>';
  }
}

/**
 * Implementation of hook_perm().
 */
function sharethis_perm() {
  return array('administer share', 'use share this');
}

/**
 * Implementation of hook_menu().
 */
function sharethis_menu() {
  $items = array();
  $items['admin/settings/sharethis'] = array(
    'title' => t('ShareThis'),
    'description' => t('Administer settings related to the ShareThis web service.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sharethis_admin_settings'),
    'access arguments' => array('administer share'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Menu callback; Settings administration.
 */
function sharethis_admin_settings() {
  $form['sharethis_sharethis_this_node_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Node types'),
    '#description' => t('Choose which node types to display the ShareThis button on.'),
    '#default_value' => variable_get('sharethis_sharethis_this_node_types', array()),
    '#options' => node_get_types('names'),
  );
  $form['sharethis_teaser'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display in teaser view'),
    '#description' => t('If enabled, the ShareThis links will appear in node teasers. If disabled, they will only appear on the full node page.'),
    '#default_value' => variable_get('sharethis_teaser', 1),
  );
  $form['sharethis_sharethis_this_where'] = array(
    '#type' => 'select',
    '#title' => t('Where to display'),
    '#description' => t('Select where you would like the ShareThis link to appear.'),
    '#default_value' => variable_get('sharethis_sharethis_this_where', 'links'),
    '#options'=> array(
      'links' => t('Links'),
      'nodes' => t('Nodes'),
    ),
  );
  $form['sharethis_sharethis_weight'] = array(
    '#type' => 'weight',
    '#delta' => 10,
    '#description' => t('Only applies when node type display is selected.'),
    '#title' => t('Weight'),
    '#default_value' => variable_get('sharethis_sharethis_weight', 0),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_nodeapi().
 */
function sharethis_nodeapi(&$node, $op, $teaser, $page) {
  switch ($op) {
    case 'view':
      if (user_access('use share this')) {
        if (!$teaser || variable_get('sharethis_teaser', 1)) {
          if (variable_get('sharethis_sharethis_this_where', 'links') == 'nodes') {
            if (in_array($node->type, variable_get('sharethis_sharethis_this_node_types', array()), TRUE)) {
              // Create the ShareThis element.
              $sharethis = theme('sharethis', $node->title, url('node/'. $node->nid, array('absolute' => TRUE)));
              $node->content['sharethis_sharethis_this'] = array(
                '#value' => $sharethis,
                '#weight' => variable_get('sharethis_sharethis_weight', 0),
              );
            }
          }
        }
      }
    break;
  }
}

/**
 * Implementation of hook_link().
 */
function sharethis_link($type, $node = NULL, $teaser = FALSE) {
  if ($type == 'node' && user_access('use share this')) {
    if (!$teaser || variable_get('sharethis_teaser', 1)) {
      if (variable_get('sharethis_sharethis_this_where', 'links') == 'links') {
        if (in_array($node->type, variable_get('sharethis_sharethis_this_node_types', array()), TRUE)) {
          // Create the ShareThis element.
          $sharethis = theme('sharethis', $node->title, url('node/'. $node->nid, array('absolute' => TRUE)));
          $links['sharethis_sharethis_this'] = array(
            'title' => $sharethis,
            'html' => TRUE,
          );
          return $links;
        }
      }
    }
  }
}

/**
 * Adds all required ShareThis JavaScript to the page.
 */
function sharethis_add_js() {
	// Be sure to add the ShareThis header code only once.
  static $sharethis_added = FALSE;
  if ($sharethis_added === FALSE) {
  	// Register the Drupal ShareThis behaviors and add the ShareThis URL.
    drupal_add_js(drupal_get_path('module', 'sharethis') . '/sharethis.js');
    drupal_add_js(array('shareThisUrl' => 'http://w.sharethis.com/button/sharethis.js#button=false'), 'setting');

    // Flag that the JavaScript has been registered.
    $sharethis_added = TRUE;
  }
}

/**
 * Implementation of hook_theme().
 */
function sharethis_theme() {
  return array(
    'sharethis' => array(
      'arguments' => array(
        'title' => NULL,
        'url' => NULL,
      ),
    ),
  );
}

/**
 * Themes the ShareThis options given.
 *
 * @param $title
 *   (optional) The name of the article you want to share. If not given, will
 *   use the title of the currently displayed page.
 * @param $url
 *   (optional) The URL of the article you want to share. If not given, will use
 *   the URL of the page you're currently on.
 * @return
 *   HTML for the ShareThis element.
 */
function theme_sharethis($title = NULL, $url = NULL) {
  // Add the JavaScript and render the HTML.
  sharethis_add_js();

  // Construct the ShareThis link using the title and the URL.
  $title = isset($title) ? $title : drupal_get_title();
  $url = isset($url) ? $url : $_GET['q'];
  return l(t('ShareThis'), $url, array(
    'absolute' => TRUE,
    'attributes' => array(
      'class' => 'sharethis-sharethis stbutton stico_default',
      'title' => $title,
    ),
  ));
}
